import { Injectable } from '@angular/core';
import { Chart } from '../chart';

@Injectable({
  providedIn: 'root'
})
export class CbuthraxisoptService implements Chart {
  readonly name = 'cbuthraxisopt' as const;
  readonly title = 'Thraxis optimized by Madison' as const;
  readonly nodes = [
    [null, 3, 'AAA'], // 0
    [0, 0, 'BBB'], // 1
    [1, 0, 'CCC'], // 2
    [1, 1, 'BCC'], // 3
    [3, 1, 'CBC'], // 4
    [4, 1, 'CCB'], // 5
    [1, 2, 'BBC'], // 6
    [6, 1, 'BCB'], // 7
    [7, 1, 'CBB'], // 8
    [0, 1, 'BBB'], // 9
    [9, 0, 'ACC'], // 10
    [10, 1, 'CAC'], // 11
    [11, 1, 'CCA'], // 12
    [9, 1, 'ABC'], // 13
    [13, 0, 'BCA'], // 14
    [14, 0, 'CAB'], // 15
    [13, 1, 'ACB'], // 16
    [16, 0, 'CBA'], // 17
    [17, 0, 'BAC'], // 18
    [9, 2, 'ABB'], // 19
    [19, 1, 'BAB'], // 20
    [20, 1, 'BBA'], // 21
    [0, 2, 'AAB'], // 22
    [22, 1, 'ABA'], // 23
    [23, 1, 'BAA'], // 24
    [24, 2, 'CAA'], // 25
    [23, 2, 'ACA'], // 26
    [22, 2, 'AAC'], // 27
  ] as const;
  readonly width = 65 as const;
  readonly height = 33 as const;
  readonly locations = [
    [1, 402], // 0
    [129, 169], // 1
    [265, 89], // 2
    [265, 169], // 3
    [394, 169], // 4
    [522, 169], // 5
    [265, 241], // 6
    [394, 241], // 7
    [522, 241], // 8
    [129, 402], // 9
    [265, 346], // 10
    [394, 346], // 11
    [522, 346], // 12
    [265, 450], // 13
    [394, 418], // 14
    [522, 418], // 15
    [394, 474], // 16
    [522, 474], // 17
    [634, 474], // 18
    [265, 546], // 19
    [394, 546], // 20
    [522, 546], // 21
    [129, 699], // 22
    [265, 667], // 23
    [394, 643], // 24
    [522, 643], // 25
    [394, 691], // 26
    [265, 731], // 27
  ] as const;
  get drawings(): Path2D[][] {
    const value = [
      ['M28 379c-49 0-66 74 5 74 6 0 33 3 36-2 21-43-27-68-61-68'], // 0
      ['M165 145c-10 0-22-2-30 1-14 5-14 17-20 23-2 2 0 9-2 11-29 29 81 47 98 21 29-43-49-59-80-59', 'M63 406c17-34 30-74 52-107 9-14 8-35 15-49 6-13 10-29 19-38l1-5c-3-3-14 9-17 10-2 1-6 6-6 4 0-4 17-16 21-12v2c2 2 0 5 1 8l10 24v4'], // 1
      ['M291 70c-25 0-42 16-42 40v9c9 9 58 22 74 14 5-3 17-4 20-9 16-32-13-59-43-59', 'M205 171c13-20 32-29 48-45l5-4-14-1h-5c3 0 18-2 20 0 1 1-1 15-1 19'], // 2
      ['M307 151c-13 0-43-5-52 4-19 19-12 51 4 67 29 29 143-38 51-69-10-3-24-5-35-5', 'M206 189c13 0 25 3 37 3 1 0 5 1 5-1 0-4-15-13-15-20v1c0 3 17 20 16 21-4 4-16 8-23 8'], // 3
      ['M425 144c-4 0-23-2-24 1-4 8-25 41-16 55 7 10 63 16 76 9 5-3 6-13 9-18 28-42-40-48-70-48', 'M336 190l47 1h-1c-4-2-4-13-7-14 0 0-4-3-2-3 3 0 7 11 8 12 15 15-3 9-13 19'], // 4
      ['M563 155c-10 0-33-6-43-1-15 7-7 14-14 21-22 22 53 64 83 34 3-3 2-16 2-21 0-4 2-14 0-18-9-18-52-13-70-13', 'M466 189l42 1c1-1-11-20-13-20s11 16 12 17h-2c-6 2-13 12-17 16'], // 5
      ['M290 223c-6 0-20-2-24 2-6 6-26 39-18 52 11 16 32 15 53 15 10 0 25 1 32-6 18-18 7-53-15-64-10-5-29-3-41-3', 'M201 196c11 0 35 40 48 47v-5l-7-20c3 0 11 20 11 23 0 2-3 0-5 0-7 0-13 4-22 4'], // 6
      ['M444 222c-6-6-89-8-65 41 11 22 108 31 93-13-5-14-14-20-27-24-7-2-15-4-22-4', 'M335 263l40 1 4 1c2-2-9-8-6-7 13 6-10 13-13 19'], // 7
      ['M563 221c-24 0-54 6-54 32v14c16 24 76 18 94 0 13-13-17-42-28-46-9-3-19-4-28-4', 'M461 265c0 2 2 1 3 1h43c1-1-10-7-10-7s14 6 12 8c-4 4-12 7-17 12'], // 8
      ['M149 379c-6 0-18-2-23 0-18 9-8 44 2 54 11 11 33 8 49 8 6 0 22 3 28 0 37-18-19-64-52-64', 'M66 425c13 0 21 6 34 6h18l-15-12 5 5c3 3 11 1 11 5 0 5-13 13-16 16'], // 9
      ['M305 321c-28 0-66 22-50 54 7 15 86 28 86-9 0-15-6-23-14-31-7-7-15-10-28-10', 'M203 405c5 0 36-26 44-30h8-22 8c4 0 13-2 16 0 1 1-1 13-1 15'], // 10
      ['M423 325c-30 0-34 2-46 26-3 7-7 18-4 26 4 13 82 18 94 6 2-2 1-10 1-13 0-34-31-32-53-43-8-4-20-10-30-10', 'M335 367c0 2 3 1 4 1h46l-13-13 2 5c2 2 7 6 5 9 0 0-16 12-18 12'], // 11
      ['M558 322c-44 0-60 44-28 66 10 7 63 5 71-3 9-9-19-53-26-57-5-3-10-3-16-6', 'M465 367c0-2 3-1 4-1 12 0 38 5 48 0 4-2-5-7-8-11l-2-4c0 7 12 11 12 16 0 0-15 7-16 10'], // 12
      ['M301 427c-11 0-26-1-32 5-5 5-15 6-20 11v13c0 42 89 45 98 28 2-4 0-16 0-21 0-38-40-33-72-33', 'M207 422c16 0 34 21 44 31h2c6 0-2-14-2-17l-2-5c0 4 5 19 2 22s-20 0-24 0'], // 13
      ['M443 401c-11 0-20-4-32 0-15 5-37 31-20 48 10 10 64 13 74 3 5-5 4-13 4-21 0-36-35-28-64-28', 'M335 459c11 0 29-14 38-20l2-2-20 3c2 2 17-4 20-1s-4 9-4 14'], // 14
      ['M569 399c0-2-3-1-5-1-14 0-47 0-53 11-29 59 65 70 85 50 5-5 5-11 5-18 0-32-44-46-74-46', 'M463 443h49s-13-13-13-8c0 4 12 2 12 6 0 3-13 9-14 10s-2 4-5 4'], // 15
      ['M439 459c-10 0-24-2-34 0-16 4-26 16-26 33v11c23 12 46 14 74 7 6-1 28-2 30-7 13-27-61-44-75-44', 'M338 471c20 0 35 15 53 15v-2l-2-9s0-6 1-4c10 20-6 22-21 22'], // 16
      ['M564 463c-5 0-29-3-32 0-5 5-13 4-17 12-24 48 65 49 84 30 3-3-1-20-2-23-8-23-47-21-72-21', 'M461 495l43 2h6l-7-5c-7-7 5 3 5 5 0 3-13 7-13 11'], // 17
      ['M681 455c-7 0-24-6-33-2-9 5-25 11-29 20-7 15 2 37 15 44 24 12 59 4 75-12 20-20-18-52-35-52', 'M595 499h35l-1-1c-6-12 2 2 2 5v1c-2 1-8 4-8 7'], // 18
      ['M314 531c-12 0-26-3-36 2-9 5-17 7-25 12-6 4-11 12-11 20 0 45 96 40 105 22 22-44-61-50-82-61', 'M193 435c22 22 27 65 53 78 3 2 16 24 19 21 2-2-6-15-7-17a556 556 0 015 18c-4 4-21-4-25-4'], // 19
      ['M441 527c-31 0-75 15-56 52 3 7 16 7 22 9 73 24 96-69 24-69', 'M335 569h52c1-1-4-2-4-2l-8-10-2-2 6 5c2 4 5 2 8 5l-20 19'], // 20
      ['M568 529c-9 0-39 2-41 6-8 16-21 42-4 59 5 5 19 5 26 5 69 0 48-74-1-74', 'M469 570c6 0 42 5 44 3 1-1-4-4-4-4l-6-11c-2 0 1 5 2 6 2 2 9 11 7 15-1 2-15 5-17 5'], // 21
      ['M169 672c-11 0-16 8-24 13-62 41 5 86 53 62 7-3 3-26 1-30-10-20-41-42-65-42', 'M63 430c0 53 25 124 40 169l1 4c7 20 19 43 19 66l2 9c-2 0-8-6-10-8l-4-5 16 14v-4c0-8 5-16 9-24'], // 22
      ['M315 643c0-3-2-2-5-2-18 0-32 7-47 14-18 9-10 42 2 54 5 5 18 6 26 6s22 3 30 0c15-5 39-70-8-70', 'M199 702h2c14-7 35-18 54-18h2c4-4-18-2-14-6 2-2 12 5 14 5l4 2c-3 3-7 3-11 7s-4 11-8 15'], // 23
      ['M443 618c-9 0-50 0-54 4-14 14-10 52 2 64 5 5 18 3 25 3 12 0 26 2 37-2s20-34 14-46c-6-13-30-24-46-24', 'M337 675c15 0 25-5 40-5l3-1c1-1-16-8-17-7-3 3 4 2 4 2 3 2 10 7 12 7l-5 2c-3 0-5 6-9 6'], // 24
      ['M574 625l-39 2c-14 0-17 10-26 14-12 6-6 35 8 40 19 6 63 25 84 4 5-5 6-18 8-20s1-8 1-12c0-27-40-31-62-31', 'M461 665h38c2 0-2-3-3-4-1-2-6-6-6-8s2 3 3 4c2 2 8 7 8 9s-3 0-5 1c-3 2-4 6-8 6'], // 25
      ['M447 678c0-2-8-1-10-1-27 0-48 1-60 24-2 4-4 12-1 16 5 8 16 11 19 16 1 2 4 1 6 1l15 1h43c28-28 10-61-27-61', 'M337 686a256 256 0 0148 4c1-1-6-10-6-12 0 0 8 12 7 13-4 4-12 3-16 7'], // 26
      ['M311 708c-9 0-22-2-30 2-6 3-19 7-22 13-5 10-3 31 4 38 8 8 27 6 36 11 6 3 36 6 41 1s6-17 6-24c0-37-29-42-61-42', 'M199 721c16 0 27 5 44 5l20 3-10-15 8 15-16 8'], // 27
    ].map(paths => paths.map(path => new Path2D(path)));
    Object.defineProperty(this, 'drawings', { value });
    return value;
  }
}
